{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","fetch","then","response","json","catch","error","console","warn","FindMovie","addMovie","useState","status","setStatus","setTitle","setMovie","loadMovie","a","requestedMovie","htmlFor","type","id","placeholder","classNames","onChange","event","target","value","onClick","find","item","App","setMovies","newMovie","current","ReactDOM","render","document","getElementById"],"mappings":"+TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uCCZRC,EAAW,SAACC,GACvB,OAAOC,MAAM,GAAD,OAJG,2BAIH,mBAHC,WAGD,cAAmCD,IAC5CE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAELC,QAAQC,KAAK,SAAUF,OCGhBG,G,MAA6B,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUd,EAAa,EAAbA,OACrD,EAA4Be,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAAOX,EAAP,KAAcc,EAAd,KACA,EAA0BH,mBAAS,CACjCpB,OAAQ,GACRE,MAAO,GACPC,KAAM,GACNI,OAAQ,KAJV,mBAAOV,EAAP,KAAc2B,EAAd,KAOMC,EAAS,uCAAG,4BAAAC,EAAA,sEACalB,EAASC,GADtB,QACVkB,EADU,QAGGpB,QACjBe,GAAU,GACVE,EAASG,IAETL,GAAU,GAPI,2CAAH,qDAkCf,OACE,qCACE,uBAAMxB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ8B,QAAQ,cAAjC,yBAIA,qBAAK9B,UAAU,UAAf,SACE,uBACE+B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZjC,UAAWkC,IACT,QACA,CAAE,cAAeX,IAEnBY,SAtBS,SAACC,GACpBZ,GAAU,GACVC,EAASW,EAAMC,OAAOC,aAuBdf,GACA,mBAAGvB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE+B,KAAK,SACL/B,UAAU,kBACVuC,QAASZ,EAHX,4BASF,qBAAK3B,UAAU,UAAf,SACE,wBACE+B,KAAK,SACL/B,UAAU,oBACVuC,QAxDc,YACJhC,EAAOiC,MAAK,SAAAC,GAAI,OAAIA,EAAKhC,SAAWV,EAAMU,WAE1CV,EAAMU,SACxBY,EAAStB,GAZX2B,EAAS,CACPxB,OAAQ,GACRE,MAAO,GACPC,KAAM,GACNI,OAAQ,OAyDF,qCAWLV,EAAMK,OACL,sBAAKJ,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,YCvGf2C,EAAgB,WAC3B,MAA4BpB,mBAAkB,IAA9C,mBAAOf,EAAP,KAAeoC,EAAf,KASA,OACE,sBAAK3C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CACEqB,SAdS,SAACuB,GAChBD,GAAU,SAAAE,GAAO,4BACZA,GADY,CAEfD,QAYIrC,OAAQA,UCnBlBuC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.947ce301.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/';\nconst apiKey = 'cf4cfe8c';\n\nexport const getMovie = (title: string) => {\n  return fetch(`${BASE_URL}?apikey=${apiKey}&t=${title}`)\n    .then(response => response.json())\n    .catch(error => {\n      // eslint-disable-next-line no-console\n      console.warn('Error:', error);\n    });\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n  movies: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie, movies }) => {\n  const [status, setStatus] = useState(true);\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState({\n    Poster: '',\n    Title: '',\n    Plot: '',\n    imdbID: '',\n  });\n\n  const loadMovie = async () => {\n    const requestedMovie = await getMovie(title);\n\n    if (requestedMovie.imdbID) {\n      setStatus(true);\n      setMovie(requestedMovie);\n    } else {\n      setStatus(false);\n    }\n  };\n\n  const clearState = () => {\n    setMovie({\n      Poster: '',\n      Title: '',\n      Plot: '',\n      imdbID: '',\n    });\n  };\n\n  const addMovieToTheList = () => {\n    const isDuplicate = movies.find(item => item.imdbID === movie.imdbID);\n\n    if (!isDuplicate && movie.imdbID) {\n      addMovie(movie);\n      clearState();\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setStatus(true);\n    setTitle(event.target.value);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { ' is-danger': !status },\n              )}\n              onChange={handleChange}\n            />\n          </div>\n          {!status && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={loadMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovieToTheList}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie.Title && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies(current => ([\n      ...current,\n      newMovie,\n    ]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}