{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","a","fetch","response","json","Error","String","FindMovie","onAdd","useState","setTitle","setMovie","wasFound","setWasFound","hasPreview","setHasPreview","hasDuplicate","setHasDuplicate","isValid","setIsValid","loadMovie","requestedMovie","Response","htmlFor","type","id","value","placeholder","classNames","onChange","event","target","onClick","toLowerCase","includes","trim","some","item","disabled","App","setMovies","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e1d33f2.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/';\nconst API_KEY = 'cf4cfe8c';\n\nexport const getMovie = async (title: string) => {\n  try {\n    const response = await fetch(`${API_URL}?apikey=${API_KEY}&t=${title}`);\n\n    return await response.json();\n  } catch (error) {\n    throw new Error(String(error));\n  }\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n  movies: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd, movies }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState({\n    Poster: '',\n    Title: '',\n    Plot: '',\n    imdbID: '',\n  });\n  const [wasFound, setWasFound] = useState(true);\n  const [hasPreview, setHasPreview] = useState(false);\n  const [hasDuplicate, setHasDuplicate] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n\n  const loadMovie = async () => {\n    const requestedMovie = await getMovie(title);\n\n    if (requestedMovie.Response === 'True') {\n      setWasFound(true);\n      setMovie(requestedMovie);\n      setHasPreview(true);\n      setIsValid(true);\n    } else {\n      setWasFound(false);\n    }\n  };\n\n  const findMovie = () => {\n    if (!movie.Title.toLowerCase().includes(title.trim().toLowerCase())) {\n      loadMovie();\n    } else {\n      setHasPreview(true);\n      setIsValid(true);\n    }\n  };\n\n  const addMovie = () => {\n    const isDuplicate = movies.some(item => item.imdbID === movie.imdbID);\n\n    if (!isDuplicate) {\n      onAdd(movie);\n      setHasPreview(false);\n      setIsValid(false);\n    } else {\n      setHasDuplicate(true);\n      setIsValid(false);\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setWasFound(true);\n    setHasDuplicate(false);\n    setHasPreview(false);\n    setTitle(event.target.value);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={title}\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { ' is-danger': (!wasFound || hasDuplicate) },\n              )}\n              onChange={handleChange}\n            />\n          </div>\n          {!wasFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n          {hasDuplicate && (\n            <p className=\"help is-danger\">\n              The movie is already in the list\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovie}\n              disabled={!isValid}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {hasPreview && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          onAdd={addMovie}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}